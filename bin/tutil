#!/usr/bin/env python3

import sys
from datetime import datetime, timezone

timestamp_scales = (
    (10**0, "seconds"),
    (10**3, "milliseconds"),
    (10**6, "microseconds"),
    (10**9, "nanoseconds"),
)


def guess_timestamp(timestamp):
    deadline = 32503680000  # 3000-01-01T00:00:00+0800 in seconds
    timestamp_unit = ""

    for (scale, timestamp_unit) in timestamp_scales:
        if timestamp / scale <= deadline:
            return (
                datetime.fromtimestamp(timestamp / scale).astimezone(),
                timestamp_unit,
            )
    raise Exception("unable to guess timestramp {}".format(timestamp))


def main():
    argv = sys.argv
    if len(argv) > 1:
        # guess timestamp
        timestamp = float(argv[1])
        date_time, timestamp_unit = guess_timestamp(timestamp)
        print(timestamp_unit)
        print(date_time)
        print(date_time.astimezone())
    else:
        # print current time
        now = datetime.now()
        timestamp = now.timestamp()
        for (scale, timestamp_unit) in timestamp_scales:
            print(
                "timestamp {:<13} {}".format(
                    timestamp_unit + ":", int(timestamp * scale)
                )
            )
        print(now.isoformat())
        print(now.astimezone().isoformat())
        print(now.astimezone(timezone.utc).isoformat())


if __name__ == "__main__":
    main()
